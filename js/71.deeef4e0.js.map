{"version":3,"file":"js/71.deeef4e0.js","mappings":"idA6BE,MAAMA,GAAQC,EAAAA,EAAAA,MACRC,EAAWF,EAAMG,OAAOD,SAExBE,GAAOC,EAAAA,EAAAA,IAAI,CAAC,GAEZC,GAAYD,EAAAA,EAAAA,KAAI,GAChBE,GAAUF,EAAAA,EAAAA,KAAI,GAEdG,EAAYC,UAChB,IACEH,EAAUI,OAAQ,EAClB,MAAMC,QAAiBC,EAAAA,EAAMC,IAC1B,kCAAiCX,IAClC,CACEY,QAAS,CACPC,cAAgB,2DAItBX,EAAKM,MAAQC,EAASK,IACxB,CAAE,MAAOC,GACPV,EAAQG,OAAQ,CAClB,CAAE,QACAJ,EAAUI,OAAQ,CACpB,G,OAGFQ,EAAAA,EAAAA,KAAU,KACRV,GAAW,I,ohBCnDf,MAAMW,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,+HCLA,MAAM,EAAc,EAEpB,O","sources":["webpack://workle-test/./src/components/FullProfileItem.vue","webpack://workle-test/./src/components/FullProfileItem.vue?2e7f","webpack://workle-test/./src/views/ProfileView.vue"],"sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <PreloaderBlock v-if=\"isLoading\" />\r\n    <ErrorItem v-else-if=\"isError\" />\r\n    <div class=\"profile\" v-else>\r\n      <div class=\"image\">\r\n        <UserImage\r\n          v-if=\"user.profile_image\"\r\n          :source=\"user.profile_image.large\"\r\n          :alt=\"user.username\" />\r\n      </div>\r\n      <div class=\"profileInfo\">\r\n        <p class=\"profileName\">{{ user.name }}</p>\r\n        <p v-if=\"user.bio\" class=\"profileBio\">{{ user.bio }}</p>\r\n        <p v-else class=\"profileUsername\">{{ \"@\" + user.username }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  import { ref, onMounted } from \"vue\";\r\n  import { useRoute } from \"vue-router\";\r\n  import axios from \"axios\";\r\n\r\n  import UserImage from \"@/components/UI/UserImage.vue\";\r\n  import PreloaderBlock from \"@/components/PreloaderBlock.vue\";\r\n  import ErrorItem from \"@/components/UI/ErrorItem.vue\";\r\n\r\n  const route = useRoute();\r\n  const username = route.params.username;\r\n\r\n  const user = ref({});\r\n\r\n  const isLoading = ref(false);\r\n  const isError = ref(false);\r\n\r\n  const fetchUser = async () => {\r\n    try {\r\n      isLoading.value = true;\r\n      const response = await axios.get(\r\n        `https://api.unsplash.com/users/${username}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Client-ID ${process.env.VUE_APP_API_KEY}`,\r\n          },\r\n        }\r\n      );\r\n      user.value = response.data;\r\n    } catch (error) {\r\n      isError.value = true;\r\n    } finally {\r\n      isLoading.value = false;\r\n    }\r\n  };\r\n\r\n  onMounted(() => {\r\n    fetchUser();\r\n  });\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .profile {\r\n    gap: 20px;\r\n    padding: 20px;\r\n    @include flex-column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media screen and (min-width: 480px) {\r\n      @include flex-row;\r\n    }\r\n  }\r\n\r\n  .image {\r\n    width: 150px;\r\n  }\r\n\r\n  .profileInfo {\r\n    @include flex-column;\r\n    justify-content: center;\r\n    gap: 10px;\r\n  }\r\n\r\n  .profileName {\r\n    font-size: 40px;\r\n    font-weight: 700;\r\n    line-height: 1.2;\r\n    text-align: center;\r\n\r\n    @media screen and (min-width: 480px) {\r\n      text-align: left;\r\n    }\r\n  }\r\n\r\n  .profileBio {\r\n    max-width: 400px;\r\n    text-align: center;\r\n\r\n    @media screen and (min-width: 480px) {\r\n      text-align: left;\r\n    }\r\n  }\r\n</style>\r\n","import script from \"./FullProfileItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FullProfileItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FullProfileItem.vue?vue&type=style&index=0&id=5a29afcb&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5a29afcb\"]])\n\nexport default __exports__","import script from \"./ProfileView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProfileView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["route","useRoute","username","params","user","ref","isLoading","isError","fetchUser","async","value","response","axios","get","headers","Authorization","data","error","onMounted","__exports__"],"sourceRoot":""}